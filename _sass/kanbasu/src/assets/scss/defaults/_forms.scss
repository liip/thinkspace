/*----------------------------------------*\
  FORMS
\*----------------------------------------*/

// Prepare some required values
// Find the field border width from $field-border parameter
$field-border-width: 0px;

@each $value in $field-border {
  @if type-of($value) == 'number' {
    $field-border-width: $value;
  }
}


/**
 * Basic form elements
 */

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

input[type='text'],
input[type='search'],
input[type='email'],
input[type='tel'],
input[type='url'],
input[type='password'],
input[type='date'],
input[type='datetime'],
input[type='datetime-local'],
input[type='month'],
input[type='week'],
input[type='time'],
input[type='number'],
input[type='file'],
select,
textarea {
  width: 100%;
  padding: ratio($field-padding) $field-padding;

  color: $field-color;
  font-size: $field-font-size;
  font-family: $field-font-family;
  line-height: $field-line-height;

  border: $field-border;
  background-color: $field-bkg-color;
  border-radius: $field-border-radius;

  // Cleaner font rendering
  // <input> doesn’t inherit from body
  -moz-osx-font-smoothing: grayscale;
   -webkit-font-smoothing: antialiased;

  &:focus {
    border-color: $field-focus-border-color;
    outline: none;
  }

  &[disabled] {
    color: $field-disabled-color;
    background-color: $field-disabled-bkg-color;
    cursor: not-allowed;
  }
}

select {
  // Select doesn’t care about vertical padding, we have to set the height instead
  // Calculate the height according to fields configuration
  // Font size * line height + padding + border
  height: floor($font-size-default*$field-line-height + ratio($field-padding)*2 + $field-border-width*2);
  padding-top: 0;
  padding-bottom: 0;
}

textarea {
  resize: vertical;
}

input[type='checkbox'],
input[type='radio'] {
  display: inline-block;

  label & {
    margin-right: $spacing-unit-tiny;
  }
}

label {
  display: block;
  padding-bottom: $spacing-unit-small;

  cursor: pointer;
}

  .label--inline {
    display: inline-block;
    padding-top: ratio($spacing-unit-small);
    padding-bottom: ratio($spacing-unit-small);

    &:not(:last-child) {
      margin-right: $spacing-unit-default;
    }
  }


/**
 * Forms layout
 */

.form-group {
  ~ .form-group {
    margin-top: $spacing-unit-small;
  }
}

.field-label {
  font-weight: bold;
  padding: ratio($spacing-unit-small) 0;
}

.field-help {
  margin-top: $spacing-unit-tiny;
  margin-bottom: 0;

  color: $field-help-color;
}


/**
 * Sizes
 */

.input--small,
.select--small {
  font-size: $field-small-font-size !important;
  border-radius: $field-small-border-radius !important;
}

.input--small {
  padding: ratio($field-small-padding) $field-small-padding !important;
}

.select--small {
  height: floor($font-size-default*parseInt($field-small-font-size)*$field-line-height + ratio($field-small-padding)*2 + $field-border-width*2) !important;
  padding-left: $field-small-padding !important;
  padding-right: $field-small-padding !important;
}


.input--large,
.select--large {
  font-size: $field-large-font-size !important;
  border-radius: $field-large-border-radius !important;
}

.input--large {
  padding: ratio($field-large-padding) $field-large-padding !important;
}

.select--large {
  height: floor($font-size-default*parseInt($field-large-font-size)*$field-line-height + ratio($field-large-padding)*2 + $field-border-width*2) !important;
  padding-left: $field-large-padding !important;
  padding-right: $field-large-padding !important;
}
